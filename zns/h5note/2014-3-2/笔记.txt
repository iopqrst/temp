nodeJS  JS  
	用来写后台

	后台：php asp jsp

nodeJS
优势：
	1.性能   php  高83倍
		php  	200台    400W
		nodeJS	3台	  6W

	响应速度：
	nodeJS		1s
	php		83s   一分半
	2. 学习成本低
	3. 和js无缝对接

劣势：
1. 学习资料
2. *对程序员要求略高
3. 托管环境  ---阿里云

nodeJS 和JS

nodeJS： document  window

nodeJS：操作文件、可以操作数据库

浏览器：chrome FF IE
服务器：apache iis tomcat nginx

http://nodejs.org

winow+R    cmd
node  
node -v  

切换磁盘：  e:
切换目录：  cd 目录名
清屏：		cls

运行node：   node  文件名.js


如何写一个自己的服务器？

http  协议


E ADDR IN USE

response.write('abc');  往浏览器端输出东西
response.end();


重启服务

================================

文件读取：
fs   file system


fs.readFile(文件的地址,function(err,data){

});


文件读取：
1. 文本  utf-8
2. 图片  二进制

浏览器  服务器  二进制


异步：前一个操作没完成，后一个可以走
同步：前一个操作没有完成，后一个不能走
===============================

GET
POST

引入系统模块 ：  require('http');
引入一个自定义模块： require('./mod');


ajax登陆：
abc  123


接口：user?username=xxx&password=xxx;

XMLHttpRequest cannot load file:///E:/mynode/www/user?username=abc&password=abc. Cross origin requests are only supported for HTTP. 


1. 先提取url
2. 你到时login，user

数据库：
库    ->文件夹
表    ->文件

nodeJS使用mysql

第三方

npm install mysql

npm  nodeJs  packge  manage


mysql:

sql语句：

查询：SELECT * FROM 表
      SELECT username FROM 表

      SELECT * FROM 表 WHERE username='abc';

插入：
     INSERT INTO 表 VALUES('aaa','bbb');


接口：user?username=xxx&password=xxx;

user?act=login&username=xxx&password=xxx;

user?act=add&username=xxx&password=xxx;
	

































	


